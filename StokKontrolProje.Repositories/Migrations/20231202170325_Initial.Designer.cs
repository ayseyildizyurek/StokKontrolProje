// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokKontrolProje.Repositories.Context;

#nullable disable

namespace StokKontrolProje.Repositories.Migrations
{
    [DbContext(typeof(StokKontrolContext))]
    [Migration("20231202170325_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2377),
                            CategoryName = "Sebze",
                            Description = "Sebzeler",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2379),
                            CategoryName = "İçecek",
                            Description = "İçecekler",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2381),
                            CategoryName = "Meyve",
                            Description = "Meyveler",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Stock")
                        .HasColumnType("smallint");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2603),
                            CategoryId = 1,
                            IsActive = true,
                            ProductName = "Salatalık",
                            Stock = (short)500,
                            SupplierId = 1,
                            UnitPrice = 50m
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2606),
                            CategoryId = 2,
                            IsActive = true,
                            ProductName = "Soğuk Çay",
                            Stock = (short)1000,
                            SupplierId = 2,
                            UnitPrice = 30m
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2608),
                            CategoryId = 3,
                            IsActive = true,
                            ProductName = "Çilek",
                            Stock = (short)60,
                            SupplierId = 1,
                            UnitPrice = 60m
                        });
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2699),
                            Address = "İstanbul",
                            Email = "sebzeci@mail.com",
                            IsActive = false,
                            Phone = "555",
                            SupplierName = "Sebze Hal1"
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2702),
                            Address = "İstanbul",
                            Email = "icecek@mail.com",
                            IsActive = false,
                            Phone = "222",
                            SupplierName = "İçecek Dağıtım"
                        });
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2778),
                            Address = "Düzce",
                            Email = "ayse@mail.com",
                            FirstName = "Ayşe",
                            IsActive = false,
                            LastName = "Yıldız",
                            Password = "Ayse123.",
                            Phone = "888",
                            Role = 5
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2023, 12, 2, 20, 3, 24, 793, DateTimeKind.Local).AddTicks(2781),
                            Address = "Ankara",
                            Email = "mehmet@mail.com",
                            FirstName = "Mehmet",
                            IsActive = false,
                            LastName = "Yürek",
                            Password = "Mehmet123.",
                            Phone = "999",
                            Role = 1
                        });
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Order", b =>
                {
                    b.HasOne("StokKontrolProje.Entities.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.OrderDetail", b =>
                {
                    b.HasOne("StokKontrolProje.Entities.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokKontrolProje.Entities.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Product", b =>
                {
                    b.HasOne("StokKontrolProje.Entities.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokKontrolProje.Entities.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StokKontrolProje.Entities.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
